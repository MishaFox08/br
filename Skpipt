// ==UserScript==
// @name         BR | Script forum
// @namespace    https://forum.blackrussia.online
// @version      1.0.5.10
// @description  try to take over the world!
// @author       moiseeey
// @match        https://forum.blackrussia.online/index.php?threads/*
// @include      https://forum.blackrussia.online/index.php?threads/
// @grant        none
// @license    MIT
// @collaborator moiseeev
// @icon https://icons.iconarchive.com/icons/aha-soft/iron-man/48/Ironman-Mask-3-Old-icon.png
// @copyright 2021, Moiseeev (https://openuserjs.org/users/moiseeev)
// @updateURL https://openuserjs.org/meta/moiseeev/BR_Script_forum.meta.js
// ==/UserScript==

(function () {
  'use strict';
  const UNACCEPT_PREFIX = 4; // Prefix that will be set when thread closes
  const ACCEPT_PREFIX = 8; // Prefix that will be set when thread accepted
  const PIN_PREFIX = 2; // Prefix that will be set when thread pins
  const COMMAND_PREFIX = 10; // Prefix that will be set when thread send to project team
  const WATCHED_PREFIX = 9;
  const CLOSE_PREFIX = 7;
  const buttons = [{
      title: 'Приветствие',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}![/CENTER]<br>' + '[CENTER]  [/CENTER][/FONT]',
    },
    {
      title: 'Форма темы',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Жалоба составлена не по форме. Внимательно прочитайте правила составления жалобы, которые закреплены в этом разделе.[/CENTER]" +
        '[CENTER]Отказано, закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Соц. сети',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Доказательства должны быть прикреплены только на - (YouTube, Япикс, imgur). Загрузка доказательств в соц. сети (ВКонтакте, instagram) запрещается.[/CENTER]<br>" +
        '[CENTER]Отказано, закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Правила раздела',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Созданная  вами тема никоим образом не относится к теме данного раздела. [/CENTER]<br>" +
        '[CENTER]Отказано,закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Дублирование темы',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Дублирование темы. Напоминаем, при 3 дублированиях – форумный аккаунт будет заблокирован.<br>" +
        '[CENTER]Отказано, закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Недостаточно доказательств',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Недостаточно доказательств на нарушение от данного администратора.<br><br>" +
        '[CENTER]Отказано, закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Запрос док.',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Запрошу доказательства у администратора.<br><br>" +
        '[CENTER]Ожидайте ответа.[/CENTER][/FONT]',
    },
    {
      title: 'Наз. темы',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Название темы не по форме.(Nickname Администратора//Название наказания.)<br><br>" +
        '[CENTER]Отказано, закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Беседа',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Ваша жалоба была одобрена и будет проведена беседа с администратором. Ваше наказание будет снято.<br><br>" +
        '[CENTER]Приятной игры на нашем сервере.​[/CENTER][/FONT]',
    },
    {
      title: 'Пред.',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Администратор будет наказан. Ваше наказание будет снято.<br><br>" +
        '[CENTER]Приятной игры на нашем сервере.[/CENTER][/FONT]',
    },
    {
      title: 'Наказание верно.',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Администратор предоставил доказательство на ваше нарушение. Наказание выдано верно.<br><br>" +
        '[CENTER]Отказано,закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'На рассмотрение',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Ваша жалоба взята на рассмотрение. Ожидайте, пожалуйста, ответа от администрации и не нужно создавать копии этой темы.<br><br>" +
        '[CENTER]Ожидайте ответа.[/CENTER][/FONT]',
    },
    {
      title: 'Окно бана',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Даю вам 24 часа, чтобы прикрепить окошко бана.<br><br>" +
        '[CENTER]На рассмотрение...[/CENTER][/FONT]',
    },
    {
      title: '3 дня+',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]С момента выдачи наказания прошло более 3-х дней. Обратитесь в раздел "Обжалование наказаний".<br><br>" +
        '[CENTER]Закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'ГА',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Ваша Жалоба передана Главному Администратору.<br><br>" +
        '[CENTER]Ожидайте ответа.[/CENTER][/FONT]',
    },
    {
      title: 'Нарушений нет',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Нарушений со стороны администратора нет.<br><br>" +
        '[CENTER]Отказано, закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Тех. проблема',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Обратитесь в раздел "Жалобы на технических специалистов".<br><br>" +
        '[CENTER]Закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Нет /time',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]На ваших доказательствах отсутствует /time.<br><br>" +
        '[CENTER]Отказано, закрыто.[/CENTER][/FONT]',
    },
    {
      title: 'Дата выдачи',
      content: '[FONT=Courier New][CENTER]{{ greeting }}, уважаемый {{ user.mention }}[/CENTER]<br>' +
        "[CENTER]Жалоба составлена не по форме. Внимательно прочитайте правила составления жалобы, которые закреплены в этом разделе. Пропущен пункт - "Дата выдачи наказания."<br><br>" +
        '[CENTER]Отказано,закрыто.[/CENTER][/FONT]',
    },
  ];

  $(document).ready(() => {
    // Загрузка скрипта для обработки шаблонов
    $('body').append('<script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>');

    // Добавление кнопок при загрузке страницы
    addButton('На рассмотрение', 'pin');
    addButton('КП', 'teamProject');
    addButton('Одобрено', 'accepted');
    addButton('Отказано', 'unaccept');
    addButton('Ответы', 'selectAnswer');

    // Поиск информации о теме
    const threadData = getThreadData();

    $('button#pin').click(() => editThreadData(PIN_PREFIX, true));
    $('button#accepted').click(() => editThreadData(ACCEPT_PREFIX, false));
    $('button#teamProject').click(() => editThreadData(COMMAND_PREFIX, true));
    $('button#unaccept').click(() => editThreadData(UNACCEPT_PREFIX, false));

    $(`button#selectAnswer`).click(() => {
      XF.alert(buttonsMarkup(buttons), null, 'Выберите ответ:');
      buttons.forEach((btn, id) => {
        if (id > 0) {
          $(`button#answers-${id}`).click(() => pasteContent(id, threadData, true));
        }
        else {
          $(`button#answers-${id}`).click(() => pasteContent(id, threadData, false));
        }
      });
    });
  });

  function addButton(name, id) {
    $('.button--icon--reply').before(
      `<button type="button" class="button rippleButton" id="${id}" style="margin: 3px;">${name}</button>`,
    );
  }

  function buttonsMarkup(buttons) {
    return `<div class="select_answer">${buttons
  .map(
  (btn, i) =>
    `<button id="answers-${i}" class="button--primary button ` +
    `rippleButton" style="margin:5px"><span class="button-text">${btn.title}</span></button>`,
  )
  .join('')}</div>`;
  }

  function pasteContent(id, data = {}, send = false) {
    const template = Handlebars.compile(buttons[id].content);
    if ($('.fr-element.fr-view p').text() === '') $('.fr-element.fr-view p').empty();

    $('span.fr-placeholder').empty();
    $('div.fr-element.fr-view p').append(template(data));
    $('a.overlay-titleCloser').trigger('click');

    if (send == true) {
      editThreadData(buttons[id].prefix, buttons[id].status);
      $('.button--icon.button--icon--reply.rippleButton').trigger('click');
    }
  }

  function getThreadData() {
    const authorID = $('a.username')[0].attributes['data-user-id'].nodeValue;
    const authorName = $('a.username').html();
    const hours = new Date().getHours();
    return {
      user: {
        id: authorID,
        name: authorName,
        mention: `[USER=${authorID}]${authorName}[/USER]`,
      },
      greeting: () =>
        4 < hours && hours <= 11 ?
        'Доброе утро' : 11 < hours && hours <= 15 ?
        'Добрый день' : 15 < hours && hours <= 21 ?
        'Добрый вечер' : 'Доброй ночи',
    };
  }

  function editThreadData(prefix, pin = false) {
    // Получаем заголовок темы, так как он необходим при запросе
    const threadTitle = $('.p-title-value')[0].lastChild.textContent;

    if (pin == false) {
      fetch(`${document.URL}edit`, {
        method: 'POST',
        body: getFormData({
          prefix_id: prefix,
          title: threadTitle,
          _xfToken: XF.config.csrf,
          _xfRequestUri: document.URL.split(XF.config.url.fullBase)[1],
          _xfWithData: 1,
          _xfResponseType: 'json',
        }),
      }).then(() => location.reload());
    }
    if (pin == true) {
      fetch(`${document.URL}edit`, {
        method: 'POST',
        body: getFormData({
          prefix_id: prefix,
          title: threadTitle,
          sticky: 1,
          _xfToken: XF.config.csrf,
          _xfRequestUri: document.URL.split(XF.config.url.fullBase)[1],
          _xfWithData: 1,
          _xfResponseType: 'json',
        }),
      }).then(() => location.reload());
    }
  }

  function getFormData(data) {
    const formData = new FormData();
    Object.entries(data).forEach(i => formData.append(i[0], i[1]));
    return formData;
  }
})();
